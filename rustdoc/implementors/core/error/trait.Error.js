(function() {var implementors = {
"forest_auth":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_auth/enum.Error.html\" title=\"enum forest_auth::Error\">Error</a>"]],
"forest_blocks":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_blocks/header/enum.BlockHeaderBuilderError.html\" title=\"enum forest_blocks::header::BlockHeaderBuilderError\">BlockHeaderBuilderError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_blocks/errors/enum.Error.html\" title=\"enum forest_blocks::errors::Error\">Error</a>"]],
"forest_chain":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_chain/store/errors/enum.Error.html\" title=\"enum forest_chain::store::errors::Error\">Error</a>"]],
"forest_chain_sync":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_chain_sync/validation/enum.TipsetValidationError.html\" title=\"enum forest_chain_sync::validation::TipsetValidationError\">TipsetValidationError</a>"],["impl&lt;C: <a class=\"trait\" href=\"forest_chain_sync/consensus/trait.Consensus.html\" title=\"trait forest_chain_sync::consensus::Consensus\">Consensus</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_chain_sync/tipset_syncer/enum.TipsetRangeSyncerError.html\" title=\"enum forest_chain_sync::tipset_syncer::TipsetRangeSyncerError\">TipsetRangeSyncerError</a>&lt;C&gt;<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</span>"],["impl&lt;C: <a class=\"trait\" href=\"forest_chain_sync/consensus/trait.Consensus.html\" title=\"trait forest_chain_sync::consensus::Consensus\">Consensus</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_chain_sync/tipset_syncer/enum.TipsetProcessorError.html\" title=\"enum forest_chain_sync::tipset_syncer::TipsetProcessorError\">TipsetProcessorError</a>&lt;C&gt;<span class=\"where fmt-newline\">where\n    <a class=\"enum\" href=\"forest_chain_sync/tipset_syncer/enum.TipsetRangeSyncerError.html\" title=\"enum forest_chain_sync::tipset_syncer::TipsetRangeSyncerError\">TipsetRangeSyncerError</a>&lt;C&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</span>"],["impl&lt;C: <a class=\"trait\" href=\"forest_chain_sync/consensus/trait.Consensus.html\" title=\"trait forest_chain_sync::consensus::Consensus\">Consensus</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_chain_sync/chain_muxer/enum.ChainMuxerError.html\" title=\"enum forest_chain_sync::chain_muxer::ChainMuxerError\">ChainMuxerError</a>&lt;C&gt;<span class=\"where fmt-newline\">where\n    <a class=\"enum\" href=\"forest_chain_sync/tipset_syncer/enum.TipsetProcessorError.html\" title=\"enum forest_chain_sync::tipset_syncer::TipsetProcessorError\">TipsetProcessorError</a>&lt;C&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static,\n    <a class=\"enum\" href=\"forest_chain_sync/tipset_syncer/enum.TipsetRangeSyncerError.html\" title=\"enum forest_chain_sync::tipset_syncer::TipsetRangeSyncerError\">TipsetRangeSyncerError</a>&lt;C&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</span>"]],
"forest_db":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_db/errors/enum.Error.html\" title=\"enum forest_db::errors::Error\">Error</a>"]],
"forest_deleg_cns":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_deleg_cns/consensus/enum.DelegatedConsensusError.html\" title=\"enum forest_deleg_cns::consensus::DelegatedConsensusError\">DelegatedConsensusError</a>"]],
"forest_fil_cns":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_fil_cns/enum.FilecoinConsensusError.html\" title=\"enum forest_fil_cns::FilecoinConsensusError\">FilecoinConsensusError</a>"]],
"forest_ipld":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_ipld/error/enum.Error.html\" title=\"enum forest_ipld::error::Error\">Error</a>"]],
"forest_key_management":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_key_management/keystore/enum.EncryptedKeyStoreError.html\" title=\"enum forest_key_management::keystore::EncryptedKeyStoreError\">EncryptedKeyStoreError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_key_management/errors/enum.Error.html\" title=\"enum forest_key_management::errors::Error\">Error</a>"]],
"forest_message_pool":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_message_pool/errors/enum.Error.html\" title=\"enum forest_message_pool::errors::Error\">Error</a>"]],
"forest_state_manager":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"forest_state_manager/errors/enum.Error.html\" title=\"enum forest_state_manager::errors::Error\">Error</a>"]],
"forest_utils":[["impl <a class=\"trait\" href=\"forest_utils/encoding/ser/trait.StdError.html\" title=\"trait forest_utils::encoding::ser::StdError\">Error</a> for <a class=\"enum\" href=\"forest_utils/net/download/enum.DownloadError.html\" title=\"enum forest_utils::net::download::DownloadError\">DownloadError</a>"],["impl <a class=\"trait\" href=\"forest_utils/encoding/ser/trait.StdError.html\" title=\"trait forest_utils::encoding::ser::StdError\">Error</a> for <a class=\"enum\" href=\"forest_utils/enum.RetryError.html\" title=\"enum forest_utils::RetryError\">RetryError</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
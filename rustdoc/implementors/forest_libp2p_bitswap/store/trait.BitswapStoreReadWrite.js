(function() {var implementors = {
"forest_chain":[["impl&lt;DB&gt; <a class=\"trait\" href=\"forest_libp2p_bitswap/store/trait.BitswapStoreReadWrite.html\" title=\"trait forest_libp2p_bitswap::store::BitswapStoreReadWrite\">BitswapStoreReadWrite</a> for <a class=\"struct\" href=\"forest_chain/struct.ChainStore.html\" title=\"struct forest_chain::ChainStore\">ChainStore</a>&lt;DB&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DB: <a class=\"trait\" href=\"forest_libp2p_bitswap/store/trait.BitswapStoreReadWrite.html\" title=\"trait forest_libp2p_bitswap::store::BitswapStoreReadWrite\">BitswapStoreReadWrite</a>,</span>"]],
"forest_db":[["impl <a class=\"trait\" href=\"forest_libp2p_bitswap/store/trait.BitswapStoreReadWrite.html\" title=\"trait forest_libp2p_bitswap::store::BitswapStoreReadWrite\">BitswapStoreReadWrite</a> for <a class=\"struct\" href=\"forest_db/struct.MemoryDB.html\" title=\"struct forest_db::MemoryDB\">MemoryDB</a>"],["impl <a class=\"trait\" href=\"forest_libp2p_bitswap/store/trait.BitswapStoreReadWrite.html\" title=\"trait forest_libp2p_bitswap::store::BitswapStoreReadWrite\">BitswapStoreReadWrite</a> for <a class=\"struct\" href=\"forest_db/rocks/struct.RocksDb.html\" title=\"struct forest_db::rocks::RocksDb\">RocksDb</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
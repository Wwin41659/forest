searchState.loadedDescShard("neptune", 0, "Use a trait alias, so that we can have different traits …\nPoseidon circuit\nReturns the argument unchanged.\nHash types and domain separation tags.\nCalls <code>U::from(self)</code>.\n<code>max_batch_size</code> is advisory. Implenters of <code>BatchHasher</code> …\nPoseidon hash\nSponge\nCircuit for Poseidon hash.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalculates a * (b + to_add) — and enforces that …\nCalculates (a * (pre_add + b)) + post_add — and enforces …\nCreate legacy circuit for Poseidon hash. If possible, …\nConvenience function to potentially ease upgrade …\nCalculates square of sum and enforces that constraint.\nSimilar to <code>num::Num</code>, we use <code>Elt</code> to accumulate both values …\nCircuit for Poseidon hash.\nAdd two Elts and return Elt::Num tracking the calculation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalculates a * (b + to_add) — and enforces that …\nCalculates (a * (pre_add + b)) + post_add — and enforces …\nCreate a new Poseidon hasher for <code>preimage</code>.\nCreate circuit for Poseidon hash, returning an allocated …\nCreate circuit for Poseidon hash, minimizing constraints …\nScale\nSquare\nCalculates square of sum and enforces that constraint.\nCreate circuit for Poseidon hash, returning an <code>AllocatedNum</code>…\nPossible error states for the hashing.\nThe allowed number of leaves cannot be greater than the …\nAttempt to reference an index element that is out of bounds\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nImplements domain separation defined in original Poseidon …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSome HashTypes require more testing so are not yet …\nAvailable arities for the Poseidon hasher.\nMust be Arity + 1.\nHolds preimage, some utility offsets and counters along …\nHolds constant values required for further <code>Poseidon</code> …\nReturns the <code>Arity</code> value represented as <code>usize</code>.\nThe domain tag is the first element of a Poseidon …\nthe elements to permute\nReturns 1-th element from underlying <code>Poseidon</code> buffer. This …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPerforms hashing using underlying <code>Poseidon</code> buffer of the …\nPerforms hashing using underlying <code>Poseidon</code> buffer of the …\nPerforms hashing using underlying <code>Poseidon</code> buffer of the …\nAdds one more field element of preimage to the underlying …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates <code>Poseidon</code> instance using provided <code>PoseidonConstants</code> …\nGenerates new instance of <code>PoseidonConstants</code> suitable for …\nGenerates new instance of <code>PoseidonConstants</code> suitable for …\nCreates <code>Poseidon</code> instance using provided preimage and …\nGenerates new instance of <code>PoseidonConstants</code> suitable for …\nGenerates new instance of <code>PoseidonConstants</code> suitable for …\nRestore the initial state\nReplaces the elements with the provided optional items.\nReturns <code>width</code> value represented as <code>usize</code>. It equals to …\nCreates new instance of <code>PoseidonConstants</code> from already …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional <code>domain_separator</code> defaults to 0\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAbsorb one field element\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")
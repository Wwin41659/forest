searchState.loadedDescShard("jsonrpsee_client_transport", 0, "jsonrpsee-client-transports\nWebsocket transport\nReads bytes from a source.\nWrites bytes asynchronously.\nCertificate store to use for TLS connections.\nFailed to load system certs\nError in the WebSocket connection.\nCustom certificate store.\nCustom TLS configuration.\nStream to represent either a unencrypted or encrypted …\nRepresents a parsed header.\nA set of HTTP headers\nRepresents an HTTP header field value.\nAn error resulting from a failed attempt to construct a …\nError when opening the TCP socket.\nMessage was too large.\nStream mode, either plain TCP or TLS.\nNative.\nCouldn’t find any IP address for this hostname.\nUnencrypted socket stream.\nPlain mode (<code>ws://</code> URL).\nReceiving end of WebSocket transport.\nServer redirected to other location.\nServer rejected the handshake.\nFailed to resolve IP addresses for this hostname.\nSending end of WebSocket transport.\nTimeout while trying to connect.\nEncrypted socket stream.\nTLS mode (<code>wss://</code> URL).\nError in the transport layer.\nThe URI component of a request.\nA parsed URL record.\nInvalid URL.\nError that can occur when reading or sending messages on …\nError that can happen during the WebSocket handshake.\nBuilder for a WebSocket transport <code>Sender</code> and <code>Receiver</code> pair.\nWhich ALPN protocols we include in our client hello. If …\nInserts a key-value pair into the map.\nConverts a <code>HeaderValue</code> to a byte slice.\nReturn the serialization of this URL.\nReturn the authority of this URL as an ASCII string.\nGet the authority of this <code>Uri</code>.\nTry to establish the connection.\nTry to establish the connection over the given data stream.\nCreates a new builder-style object to manufacture a <code>Uri</code>.\nReturn whether this URL is a cannot-be-a-base URL, meaning …\nReturns the number of headers the map can hold without …\nCaching for compressed certificates.\nHow to compress the client’s certificate chain.\nHow to decompress the server’s certificate chain.\nWhat certificate store to use\nClears the map, removing all key-value pairs. Keeps the …\nHow to decide what client auth certificate/keys to use.\nSend a close message and close the connection.\nSet connection timeout for the handshake (default is 10 …\nTimeout for the connection.\nReturns true if the map contains a value for the specified …\nSerialize with Serde using the internal representation of …\nIf this URL has a host and it is a domain name (not an IP …\nClears the map, returning all entries as an iterator.\nWhether to send data on the first flight (“early data”…\nAllows traffic secrets to be extracted after the handshake,\nWhether to send the Server Name Indication (SNI) extension …\nGets the given key’s corresponding entry in the map for …\nExtend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.\nReturn this URL’s fragment identifier, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to convert a byte slice to a <code>HeaderValue</code>.\nConvert a directory name as <code>std::path::Path</code> into an URL in …\nConvert a file name as <code>std::path::Path</code> into an URL in the …\nAttempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.\nConvert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …\nConverts a HeaderName into a HeaderValue\nAttempt to convert a <code>Parts</code> into a <code>Uri</code>.\nConvert a static string to a <code>HeaderValue</code>.\nConvert a <code>Uri</code> from a static string.\nAttempt to convert a string to a <code>HeaderValue</code>.\nReturns a reference to the value associated with the key.\nReturns a view of all values associated with a key.\nReturns a mutable reference to the value associated with …\nReturn whether the URL has an ‘authority’, which can …\nEquivalent to <code>url.host().is_some()</code>.\nCustom headers to pass during the HTTP handshake.\nReturn the parsed representation of the host for this URL. …\nGet the host of this <code>Uri</code>.\nReturn the string representation of the host (domain or IP …\nPanics\nInserts a key-value pair into the map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves keys …\nConvert a <code>Uri</code> into <code>Parts</code>.\nReturn the serialization of this URL.\nReturns true if the map contains no elements.\nReturns true if the <code>HeaderValue</code> has a length of zero bytes.\nReturns <code>true</code> if the value represents sensitive data.\nReturn whether the URL is special (has a special scheme)\nDetermines if this writer has an efficient …\nAn iterator visiting all key-value pairs.\nAn iterator visiting all key-value pairs, with mutable …\nParse a string as an URL, with this URL as the base URL.\nHow to output key material for debugging.  The default …\nAn iterator visiting all keys.\nReturns the number of keys stored in the map.\nReturns the number of headers stored in the map.\nReturns the length of <code>self</code>.\nCreates a relative URL if possible, with this URL as the …\nThe maximum size of plaintext input to be emitted in a …\nSet the max number of redirections to perform until a …\nMax number of redirections.\nSet the maximum size of a request in bytes. Default is 10 …\nMax request payload size\nSet the maximum size of a response in bytes. Default is 10 …\nMax response payload size\nThe name portion of a header.\nCreate an empty <code>HeaderMap</code>.\nReturn a default <code>ParseOptions</code> that can fully configure the …\nReturn the origin of this URL (…\nParse an absolute URL from a string.\nParse an absolute URL from a string and add params to its …\nReturn the password for this URL, if any, as a …\nReturn the path for this URL, as a percent-encoded ASCII …\nGet the path of this <code>Uri</code>.\nReturns the path &amp; query components of the Uri\nUnless this URL is cannot-be-a-base, return an iterator of …\nReturn an object with methods to manipulate this URL’s …\nAttempts to flush the object, ensuring that any buffered …\nAttempts to read from the <code>AsyncRead</code> into <code>buf</code>.\nInitiates or attempts to shut down this writer, returning …\nAttempt to write bytes from <code>buf</code> into the object.\nLike <code>poll_write</code>, except that it writes from a slice of …\nReturn the port number for this URL, if any.\nGet the port part of this <code>Uri</code>.\nReturn the port number for this URL, or the default port …\nGet the port of this <code>Uri</code> as a <code>u16</code>.\nReturn this URL’s query string, if any, as a …\nGet the query string of this <code>Uri</code>, starting after the <code>?</code>.\nParse the URL’s query string, if any, as …\nManipulate this URL’s query string, viewed as a sequence …\nReturns a <code>Future</code> resolving when the server sent us …\nRemoves a key from the map, returning the value associated …\nIf set to <code>true</code>, requires the server to support the extended\nReserves capacity for at least <code>additional</code> more headers to …\nHow and when the client can resume a previous session.\nReturn the scheme of this URL, lower-cased, as an ASCII …\nGet the scheme of this <code>Uri</code>.\nGet the scheme of this <code>Uri</code> as a <code>&amp;str</code>.\nSends out a request. Returns a <code>Future</code> that finishes when …\nSends out a ping request. Returns a <code>Future</code> that finishes …\nSerialize with Serde using the internal representation of …\nChange this URL’s fragment identifier.\nSet a custom header passed to the server during the …\nChange this URL’s host.\nChange this URL’s host to the given IP address.\nChange this URL’s password.\nChange this URL’s path.\nChange this URL’s port number.\nChange this URL’s query string. If <code>query</code> is <code>None</code>, this …\nChange this URL’s scheme.\nMark that the header value represents sensitive …\nChange this URL’s username.\nResolve a URL’s host and port number to <code>SocketAddr</code>.\nTCP no delay.\nProvides the current system time\nAssuming the URL is in the <code>file</code> scheme or similar, convert …\nYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains …\nInserts a key-value pair into the map.\nGets the given key’s corresponding entry in the map for …\nInserts a key-value pair into the map.\nReserves capacity for at least <code>additional</code> more headers to …\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nReturn the username for this URL (typically the empty …\nThe value portion of a header.\nAn iterator visiting all values.\nAn iterator visiting all values mutably.\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nForce to use a custom certificate store.\nThe location URL redirected to.\nHTTP status code that the server returned.\nHTTP status code that the server returned.")
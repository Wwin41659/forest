searchState.loadedDescShard("ec_gpu_gen", 0, "CUDA/OpenCL code generator for finite-field arithmetic …\nErrors of this library.\nResult wrapper that is always using <code>EcError</code> as error.\nContains the error value\nIO error.\nContains the success value\nA simple error that is described by a string.\nBuilder to create the source code of a GPU kernel.\nAdd an FFT kernel function to the configuration.\nAdd a field to the configuration.\nAdd an Multiexp kernel function to the configuration.\nAppends some given source at the end of the generated …\nGenerate the GPU kernel source code based on the current …\nGenerate the GPU kernel source code based on the current …\nFast Fourier Transform on the CPU.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvience function to generate a kernel/source based on a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMultiexponentiation on the CPU.\nCreate a new configuration to generation a GPU kernel.\nHelpers for multithreaded code. An interface for dealing …\nCalculate the Fast Fourier Transform on the CPU …\nCalculate the Fast Fourier Transform on the CPU …\nReturns whether the base exists.\nA source of bases, like an iterator.\nAn object that builds a source of bases.\nParses the element from the source. Fails if the point is …\nExtend by concatenating <code>other</code>. If <code>is_input_density</code> is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerform multi-exponentiation. The caller is responsible …\nSkips <code>amt</code> elements from the source, avoiding …\nThe thread pool that is used for the computations.\nA future that is waiting for a result.\nA worker operates on a pool of threads.\nExecutes a function in a thread and returns a <code>Waiter</code> …\nOne off sending.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns binary logarithm (floored) of the number of …\nReturns a new worker.\nExecutes a function and returns the result once it is …\nExecutes the passed in function, and returns the result …\nWait for the result.")
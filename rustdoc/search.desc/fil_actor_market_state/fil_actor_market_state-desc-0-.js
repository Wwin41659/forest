searchState.loadedDescShard("fil_actor_market_state", 0, "<code>ClientDealProposal</code> is a <code>DealProposal</code> signed by a client\nA specialization of a array to deals.\nA specialization of a array to deals.\nNote: Deal Collateral is only released and returned to …\nMarket actor methods available\nMarket actor state\nEpoch at which the deal was activated, or -1. This may be …\nOption::None signifies commitment to empty sector, meaning …\nMetadata cached for efficient iteration over deals. …\nTotal amount held in escrow, indexed by actor address …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCid prefix for piece <code>Cid</code>s\nArbitrary client chosen label to apply to the deal\nAmount locked, indexed by actor address. Note: the amounts …\nDeal id state sequential incrementer\nVerified registry allocation IDs for deals that are not …\n<code>PendingProposals</code> tracks <code>dealProposals</code> that have not yet …\nDeal start deadline elapsed without appearing in a proven …\nProposals are deals that have been proposed and not yet …\n<code>Array&lt;DealID, DealState&gt;</code>\nEpoch at which the deal was terminated abnormally, or -1.\nTotal Client Collateral that is locked unlocked when deal …\nTotal storage fee that is locked in escrow unlocked when …\nTotal Provider Collateral that is locked unlocked when …\nVerify that a given set of storage deals is valid for a …\nBalance table which handles getting and updating token …\nAdds token amount to previously initialized account.\nReturns the argument unchanged.\nInitializes a balance table from a root Cid\nGets token amount for given address in balance table\nCalls <code>U::from(self)</code>.\nSubtracts value from a balance, and errors if full amount …\nInitializes a new empty balance table\nRetrieve root from balance table\nSubtracts up to the specified amount from a balance, …\nReturns total balance held by this balance table\nClientDealProposal is a DealProposal signed by a client\nA specialization of a array to deals.\nA specialization of a array to deals.\nNote: Deal Collateral is only released and returned to …\nMarket actor methods available\nMarket actor state\nEpoch at which the deal was activated, or -1. This may be …\nOption::None signifies commitment to empty sector, meaning …\nMetadata cached for efficient iteration over deals. …\nTotal amount held in escrow, indexed by actor address …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCid prefix for piece Cids\nArbitrary client chosen label to apply to the deal\nAmount locked, indexed by actor address. Note: the amounts …\nDeal id state sequential incrementer\nVerified registry allocation IDs for deals that are not …\nPendingProposals tracks dealProposals that have not yet …\nDeal start deadline elapsed without appearing in a proven …\nProposals are deals that have been proposed and not yet …\nArray&lt;DealID, DealState&gt;\nEpoch at which the deal was terminated abnormally, or -1.\nTotal Client Collateral that is locked -&gt; unlocked when …\nTotal storage fee that is locked in escrow -&gt; unlocked …\nTotal Provider Collateral that is locked -&gt; unlocked when …\nVerify that a given set of storage deals is valid for a …\nBalance table which handles getting and updating token …\nAdds token amount to previously initialized account.\nReturns the argument unchanged.\nInitializes a balance table from a root Cid\nGets token amount for given address in balance table\nCalls <code>U::from(self)</code>.\nSubtracts value from a balance, and errors if full amount …\nInitializes a new empty balance table\nRetrieve root from balance table\nSubtracts up to the specified amount from a balance, …\nReturns total balance held by this balance table\nMaximum length of a deal label.\nClientDealProposal is a DealProposal signed by a client\nA specialization of a array to deals.\nA specialization of a array to deals.\nNote: Deal Collateral is only released and returned to …\nMarket actor methods available\nMarket actor state\nEpoch at which the deal was activated, or -1. This may be …\nStatus of each sector grouping of deals.\nActivation information for the sector groups that were …\nRequests computation of an unsealed CID for each sector …\nMetadata cached for efficient iteration over deals. …\nTotal amount held in escrow, indexed by actor address …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCid prefix for piece Cids\nArbitrary client chosen label to apply to the deal\nAmount locked, indexed by actor address. Note: the amounts …\nDeal id state sequential incrementer\nThe total size of the non-verified deals activated.\nVerified registry allocation IDs for deals that are not …\nPendingProposals tracks dealProposals that have not yet …\nDeal start deadline elapsed without appearing in a proven …\nProposals are deals that have been proposed and not yet …\nDeals to verify, grouped by sector.\nDeals to activate, grouped by sector. A failed deal …\nArray&lt;DealID, DealState&gt;\nEpoch at which the deal was terminated abnormally, or -1.\nTotal Client Collateral that is locked -&gt; unlocked when …\nTotal storage fee that is locked in escrow -&gt; unlocked …\nTotal Provider Collateral that is locked -&gt; unlocked when …\nUnsealed CID computed from the deals specified for the …\nInformation about each verified deal activated.\nVerify that a given set of storage deals is valid for a …\nBalance table which handles getting and updating token …\nAdds token amount to previously initialized account.\nReturns the argument unchanged.\nInitializes a balance table from a root Cid\nGets token amount for given address in balance table\nCalls <code>U::from(self)</code>.\nSubtracts value from a balance, and errors if full amount …\nInitializes a new empty balance table\nRetrieve root from balance table\nSubtracts up to the specified amount from a balance, …\nReturns total balance held by this balance table\nMaximum length of a deal label.\nClientDealProposal is a DealProposal signed by a client\nA specialization of a array to deals.\nA specialization of a array to deals.\nNote: Deal Collateral is only released and returned to …\nMarket actor methods available\nIDs of deals associated with a single sector.\nMarket actor state\nInformation about each deal activated.\nEpoch at which the deal was activated, or -1. This may be …\nStatus of each sector grouping of deals.\nActivation information for the sector groups that were …\nWhether the deal has settled for the final time\nRequests computation of an unsealed CID for each sector …\nMetadata cached for efficient iteration over deals. …\nTotal amount held in escrow, indexed by actor address …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGiven a DealProposal, checks that the corresponding deal …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCid prefix for piece Cids\nArbitrary client chosen label to apply to the deal\nAmount locked, indexed by actor address. Note: the amounts …\nDeal id state sequential incrementer\nIncremental amount of funds transferred from client to …\nVerified registry allocation IDs for deals that are not …\nPendingProposals tracks dealProposals that have not yet …\nDeal start deadline elapsed without appearing in a proven …\nProposals are deals that have been proposed and not yet …\nMaps providers to their sector IDs to deal IDs. This …\nDelete proposal and state simultaneously.\nIndicators of success or failure for each deal\nSector number with the provider that has committed the …\nDeals to verify, grouped by sector.\nDeals to activate, grouped by sector. A failed deal …\nResults for the deals that succesfully settled\nArray&lt;DealID, DealState&gt;\nEpoch at which the deal was terminated abnormally, or -1.\nTotal Client Collateral that is locked -&gt; unlocked when …\nTotal storage fee that is locked in escrow -&gt; unlocked …\nTotal Provider Collateral that is locked -&gt; unlocked when …\nUnsealed CID computed from the deals specified for the …\nVerify that a given set of storage deals is valid for a …\nBalance table which handles getting and updating token …\nAdds token amount to previously initialized account.\nReturns the argument unchanged.\nInitializes a balance table from a root Cid\nGets token amount for given address in balance table\nCalls <code>U::from(self)</code>.\nSubtracts value from a balance, and errors if full amount …\nInitializes a new empty balance table\nRetrieve root from balance table\nSubtracts up to the specified amount from a balance, …\nReturns total balance held by this balance table\nMaximum length of a deal label.\nClientDealProposal is a DealProposal signed by a client\nA specialization of a array to deals.\nA specialization of a array to deals.\nNote: Deal Collateral is only released and returned to …\nMarket actor methods available\nMarket actor state\nInformation about each deal activated.\nEpoch at which the deal was activated, or -1. This may be …\nStatus of each sector grouping of deals.\nActivation information for the sector groups that were …\nWhether the deal has settled for the final time\nRequests computation of an unsealed CID for each sector …\nMetadata cached for efficient iteration over deals. …\nTotal amount held in escrow, indexed by actor address …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGiven a DealProposal, checks that the corresponding deal …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCid prefix for piece Cids\nArbitrary client chosen label to apply to the deal\nAmount locked, indexed by actor address. Note: the amounts …\nDeal id state sequential incrementer\nIncremental amount of funds transferred from client to …\nVerified registry allocation IDs for deals that are not …\nPendingProposals tracks dealProposals that have not yet …\nDeal start deadline elapsed without appearing in a proven …\nProposals are deals that have been proposed and not yet …\nMaps providers to their sector IDs to deal IDs. This …\nDelete proposal and state simultaneously.\nIndicators of success or failure for each deal\nSector number with the provider that has committed the …\nDeals to verify, grouped by sector.\nDeals to activate, grouped by sector. A failed deal …\nResults for the deals that succesfully settled\nArray&lt;DealID, DealState&gt;\nEpoch at which the deal was terminated abnormally, or -1.\nTotal Client Collateral that is locked -&gt; unlocked when …\nTotal storage fee that is locked in escrow -&gt; unlocked …\nTotal Provider Collateral that is locked -&gt; unlocked when …\nUnsealed CID computed from the deals specified for the …\nVerify that a given set of storage deals is valid for a …\nBalance table which handles getting and updating token …\nAdds token amount to previously initialized account.\nReturns the argument unchanged.\nInitializes a balance table from a root Cid\nGets token amount for given address in balance table\nCalls <code>U::from(self)</code>.\nSubtracts value from a balance, and errors if full amount …\nInitializes a new empty balance table\nRetrieve root from balance table\nSubtracts up to the specified amount from a balance, …\nReturns total balance held by this balance table\nTotal (assumed) Filecoin available to the network. This is …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum length of a deal label.\n<code>ClientDealProposal</code> is a <code>DealProposal</code> signed by a client\nNote: Deal Collateral is only released and returned to …\nMarket actor methods available\nMarket actor state\nMetadata cached for efficient iteration over deals. …\nTotal amount held in escrow, indexed by actor address …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nArbitrary client chosen label to apply to the deal\nAmount locked, indexed by actor address. Note: the amounts …\nDeal id state sequential incrementer\n<code>PendingProposals</code> tracks <code>dealProposals</code> that have not yet …\nProposals are deals that have been proposed and not yet …\n<code>Array&lt;DealID, DealState&gt;</code>\nTotal Client Collateral that is locked unlocked when deal …\nTotal storage fee that is locked in escrow unlocked when …\nTotal Provider Collateral that is locked unlocked when …\nComputes weight for a deal proposal, which is a function …\nBalance table which handles getting and updating token …\nAdds token amount to previously initialized account.\nReturns the argument unchanged.\nInitializes a balance table from a root Cid\nGets token amount for given address in balance table\nCalls <code>U::from(self)</code>.\nSubtracts value from a balance, and errors if full amount …\nInitializes a new empty balance table\nRetrieve root from balance table\nSubtracts up to the specified amount from a balance, …\nReturns total balance held by this balance table\n<code>ClientDealProposal</code> is a <code>DealProposal</code> signed by a client\nA specialization of a array to deals.\nA specialization of a array to deals.\nNote: Deal Collateral is only released and returned to …\nMarket actor methods available\nMarket actor state\nOption::None signifies commitment to empty sector, meaning …\nMetadata cached for efficient iteration over deals. …\nTotal amount held in escrow, indexed by actor address …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nArbitrary client chosen label to apply to the deal\nAmount locked, indexed by actor address. Note: the amounts …\nDeal id state sequential incrementer\nVerified registry allocation IDs for deals that are not …\n<code>PendingProposals</code> tracks <code>dealProposals</code> that have not yet …\nProposals are deals that have been proposed and not yet …\n<code>Array&lt;DealID, DealState&gt;</code>\nTotal Client Collateral that is locked unlocked when deal …\nTotal storage fee that is locked in escrow unlocked when …\nTotal Provider Collateral that is locked unlocked when …\nBalance table which handles getting and updating token …\nAdds token amount to previously initialized account.\nReturns the argument unchanged.\nInitializes a balance table from a root Cid\nGets token amount for given address in balance table\nCalls <code>U::from(self)</code>.\nSubtracts value from a balance, and errors if full amount …\nInitializes a new empty balance table\nRetrieve root from balance table\nSubtracts up to the specified amount from a balance, …\nReturns total balance held by this balance table")
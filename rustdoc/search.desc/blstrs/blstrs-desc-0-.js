searchState.loadedDescShard("blstrs", 0, "<code>blstrs</code>\nBls12-381 engine\nThis traits enables reading and writing a compressed …\n<code>Fp</code> values are always in Montgomery form; i.e., Fp(a) = aR …\nThis represents an element $c_0 + c_1 w$ of $\\mathbb{F}…\nThis is an element of $\\mathbb{G}_1$ represented in the …\nThis is an element of $\\mathbb{G}_1$ represented in the …\nThis is an element of $\\mathbb{G}_2$ represented in the …\nThis is an element of $\\mathbb{G}_2$ represented in the …\nThis is an element of $\\mathbb{G}_T$, the target group of …\nRepresents results of a Miller loop, one of the most …\nAggregate pairings efficiently.\nAggregate pairings efficiently.\nRepresents an element of the scalar field $\\mathbb{F}_q$ …\nAdds this point to another point in the affine model.\nCompress this point. Returns <code>None</code> if the element is not in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempts to convert a big-endian byte representation of a …\nAttempts to convert a big-endian byte representation of a …\nAttempts to convert a little-endian byte representation of …\nAttempts to convert a little-endian byte representation of …\nAttempts to deserialize a compressed element.\nAttempts to deserialize a compressed element.\nAttempts to deserialize a compressed element.\nAttempts to deserialize a compressed element.\nAttempts to deserialize an uncompressed element, not …\nAttempts to deserialize an uncompressed element, not …\nAttempts to deserialize an uncompressed element, not …\nAttempts to deserialize an uncompressed element, not …\nConstructs an element of <code>Fp</code> from a little-endian array of …\nConverts a little-endian non-Montgomery form <code>repr</code> into a …\nAttempts to deserialize an uncompressed element.\nAttempts to deserialize an uncompressed element.\nAttempts to deserialize an uncompressed element.\nAttempts to deserialize an uncompressed element.\nAttempts to deserialize an uncompressed element, not …\nAttempts to deserialize an uncompressed element, not …\nAttempts to deserialize an uncompressed element, not …\nAttempts to deserialize an uncompressed element, not …\nHash to curve algorithm.\nHash to curve algorithm.\nReturns the group identity, which is $1$.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this point is on the curve. This should …\nReturns true if this point is on the curve. This should …\nReturns true if this point is on the curve. This should …\nReturns true if this point is on the curve. This should …\nReturns true if this point is free of an $h$-torsion …\nReturns true if this point is free of an $h$-torsion …\nMultiplies <code>self</code> with <code>3</code>, returning the result.\nMultiplies <code>self</code> with <code>3</code>, returning the result.\nMultiplies <code>self</code> with <code>3</code>, returning the result.\nMultiplies <code>self</code> with <code>8</code>, returning the result.\nMultiplies <code>self</code> with <code>8</code>, returning the result.\nMultiply this element by the cubic and quadratic …\nPerform a multi-exponentiation, aka “…\nPerform a multi-exponentiation, aka “…\nComputes $$\\sum_{i=1}^n \\textbf{ML}(a_i, b_i)$$ given a …\nConstructs an element of <code>Fp12</code>.\nConstructs an element of <code>Fp2</code>.\nNorm of Fq2 as extension field in i over Fq\nExecute a complete pairing operation <code>(p, q)</code>.\nLeft shift <code>self</code> by <code>count</code>, returning the result.\nLeft shift <code>self</code> by <code>count</code>, returning the result.\nLeft shift <code>self</code> by <code>count</code>, returning the result.\nRight shift <code>self</code> by <code>count</code>, returning the result.\nCalculates the <code>square</code> of this element.\nConverts an element of <code>Fp</code> into a byte representation in …\nConverts an element of <code>Scalar</code> into a byte representation in\nConverts an element of <code>Fp</code> into a byte representation in …\nConverts an element of <code>Scalar</code> into a byte representation in\nSerializes this element into compressed form.\nSerializes this element into compressed form.\nSerializes this element into compressed form.\nSerializes this element into compressed form.\nConverts a Montgomery form <code>Scalar</code> into little-endian …\nSerializes this element into uncompressed form.\nSerializes this element into uncompressed form.\nSerializes this element into uncompressed form.\nSerializes this element into uncompressed form.\nReturns true if all provided messages are distinctly …\nReturns the x coordinate.\nReturns the x coordinate.\nReturns the x coordinate.\nReturns the x coordinate.\nReturns the y coordinate.\nReturns the y coordinate.\nReturns the y coordinate.\nReturns the y coordinate.\nReturns the z coordinate.\nReturns the z coordinate.")
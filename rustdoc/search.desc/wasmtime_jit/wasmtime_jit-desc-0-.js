searchState.loadedDescShard("wasmtime_jit", 0, "JIT-style runtime for WebAssembly using Cranelift.\nManagement of executable memory within a <code>MmapVec</code>\nSecondary in-memory results of function compilation.\nA compiled wasm module, ready to be instantiated.\nSecondary in-memory results of module compilation.\nHelper structure to create an ELF file as a compilation …\nA context which contains dwarf debug information to …\nVersion number of this crate.\nReturns access to the <code>addr2line::Context</code> which can be used …\nReturns the encoded address map section used to pass to …\nCompletes compilation of the <code>translation</code> specified, …\nGet the array-to-Wasm trampoline for the function <code>index</code> …\nReturns the underlying owned mmap of this compiled image.\nReturns the offset of the code section in the original …\nDemangles a single function name into a user-readable form.\nDemangles a function name if it’s provided, or returns a …\nReturns the contents of the <code>ELF_WASMTIME_DWARF</code> section.\nCreates a new <code>MmapVec</code> from <code>self.</code>\nReturns the body of the function that <code>index</code> points to.\nReturns an iterator over all functions defined within this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>CompiledModule</code> directly from a precompiled …\nLookups a defined function by a program counter value.\nGets the function location information for a given …\nLooks up the <code>name</code> section name for the function index <code>idx</code>, …\nReturns the data in the <code>ELF_NAME_DATA</code> section.\nIndicates whether this module came with n address map such …\nReturns whether the original wasm module had unparsed …\nReturns the bounds, in host memory, of where this module’…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a reference to the underlying <code>MmapVec</code> this memory …\nReturns the underlying memory which contains the compiled …\nReturn a reference-counting pointer to a module.\nReturn a reference to a mutable module (if possible).\nGet the native-to-Wasm trampoline for the function <code>index</code> …\nCreates a new <code>CodeMemory</code> by taking ownership of the …\nCreates a new builder for the <code>obj</code> specified.\nCreate a new <code>CompiledFunctionInfo</code>.\nPublishes the internal ELF image to be ready for execution.\nCreates the <code>ELF_WASMTIME_INFO</code> section from the given …\nReturns the stack map information for all functions …\nReturns the range of <code>inner</code> within <code>outer</code>, such that …\nCreates a new symbolication context which can be used to …\nReturns the contents of the text section of the ELF …\nReturns the text section of the ELF image for this …\nReturns the contents of the <code>ELF_WASMTIME_TRAPS</code> section, or …\nGet this module’s unique ID. It is unique with respect …\nReturns the concatenated list of all data associated with …\nGets the function information for a given function index.\nGet the Wasm-to-native trampoline for the given signature.\nReturns the contents of the <code>ELF_WASMTIME_INFO</code> section, or …\nCommon interface for profiling tools.\nIntialize a JitDumpAgent and write out the header.")
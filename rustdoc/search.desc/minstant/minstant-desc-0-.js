searchState.loadedDescShard("minstant", 0, "A drop-in replacement for <code>std::time::Instant</code> that measures …\nAn anchor which can be used to convert internal clocking …\nA measurement of a monotonically nondecreasing clock. …\nA default <code>Instant</code> that can be seen as a fixed but random …\nConvert interal clocking counter into a UNIX timestamp …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns the amount of time elapsed from another instant to …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant was …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if the current platform supports TSC, and the …\nReturns an instant corresponding to “now”.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed from another instant to …")
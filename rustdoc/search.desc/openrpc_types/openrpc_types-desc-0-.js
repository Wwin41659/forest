searchState.loadedDescShard("openrpc_types", 0, "A transcription of types from the <code>OpenRPC</code> Specification.\nA broken <code>ReferenceOr::Reference</code> was found.\nHolds a set of reusable objects for different aspects of …\nContact information for the exposed API.\nEmbedded literal example. The value field and …\nDefines an application level error.\nThe Example object is an object that defines an example …\nThe Example Pairing object consists of a set of example …\nA URL that points to the literal example. This provides …\nAllows referencing an external resource for extended …\nThe object provides metadata about the API. The metadata …\nLicense information for the exposed API.\nDescribes the interface for the given method name. The …\nThe version of the OpenRPC specification that this library …\nThis is the root object of the OpenRPC document. The …\nThe expected format of the parameters. As per the JSON-RPC …\nA simple object to allow referencing other components in …\nAn object representing a Server.\nAn object representing a Server Variable for server URL …\nWhile the OpenRPC Specification tries to accommodate most …\nAdds metadata to a single tag that is used by the Method …\nREQUIRED. A Number that indicates the error type that …\nAn element to hold various schemas for the specification.\nThe contact information for the exposed API.\nA Primitive or Structured value that contains additional …\nREQUIRED. The default value to use for substitution, which …\nDeclares this method to be deprecated. Consumers SHOULD …\nSpecifies that the content is deprecated and SHOULD be …\nA verbose description of the application. GitHub Flavored …\nAn optional string describing the host designated by the …\nAn optional description for the server variable. GitHub …\nA verbose explanation of the method behavior. GitHub …\nA verbose explanation of the content descriptor behavior. …\nA verbose explanation of the example pairing.\nA verbose explanation of the example. GitHub Flavored …\nA verbose explanation for the tag. GitHub Flavored …\nA verbose explanation of the target documentation. GitHub …\nThe email address of the contact person/organization. MUST …\nAn enumeration of string values to be used if the …\nA list of custom application defined errors that MAY be …\nArray of Example Pairing Objects where each example …\nAdditional external documentation.\nAdditional external documentation for this method.\nAdditional external documentation for this tag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nREQUIRED. Provides metadata about the API. The metadata …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe license information for the exposed API.\nREQUIRED. A String providing a short description of the …\nREQUIRED. The available methods for the API. While it is …\nThe identifying name of the contact person/organization.\nREQUIRED. The license name used for the API.\nREQUIRED. A name to be used as the cannonical name for the …\nREQUIRED. The cannonical name for the method. The name …\nREQUIRED. Name of the content that is being described. If …\nREQUIRED Name for the example pairing.\nCannonical name of the example.\nREQUIRED. The name of the tag.\nREQUIRED. This string MUST be the semantic version number …\nREQUIRED. A list of parameters that are applicable for …\nREQUIRED Example parameters.\nDetermines if the content is a required field. Default …\nTry and resolve all <code>ReferenceOr</code>s in the document by …\nParallel types where <code>ReferenceOr&lt;T&gt;</code> is replaced by item <code>T</code>.\nThe description of the result returned by the method. If …\nExample result. When undefined, the example pairing …\nREQUIRED. Schema that describes the content.\nAn array of Server Objects, which provide connectivity …\nAn alternative servers array to service this method. If an …\nA short summary of what the server is.\nA short summary of what the method does.\nA short summary of the content that is being described.\nShort description for the example pairing.\nShort description for the example.\nA short summary of the tag.\nA list of tags for API documentation control. Tags can be …\nA URL to the Terms of Service for the API. MUST be in the …\nREQUIRED. The title of the application.\nThe URL pointing to the contact information. MUST be in …\nA URL to the license used for the API. MUST be in the …\nREQUIRED. A URL to the target host. This URL supports …\nThe URL for the target documentation. Value MUST be in the …\nA map between a variable name and its value. The value is …\nREQUIRED. The version of the OpenRPC document (which is …\nThe Example Pairing object consists of a set of example …\nDescribes the interface for the given method name. The …\nThis is the root object of the OpenRPC document. The …\nAn element to hold various schemas for the specification.\nDeclares this method to be deprecated. Consumers SHOULD …\nA verbose explanation of the method behavior. GitHub …\nA verbose explanation of the example pairing.\nA list of custom application defined errors that MAY be …\nArray of Example Pairing Objects where each example …\nAdditional external documentation.\nAdditional external documentation for this method.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nREQUIRED. Provides metadata about the API. The metadata …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nREQUIRED. The available methods for the API. While it is …\nREQUIRED. The cannonical name for the method. The name …\nREQUIRED Name for the example pairing.\nREQUIRED. This string MUST be the semantic version number …\nREQUIRED. A list of parameters that are applicable for …\nREQUIRED Example parameters.\nThe description of the result returned by the method. If …\nExample result. When undefined, the example pairing …\nAn array of Server Objects, which provide connectivity …\nAn alternative servers array to service this method. If an …\nA short summary of what the method does.\nShort description for the example pairing.\nA list of tags for API documentation control. Tags can be …")
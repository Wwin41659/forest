searchState.loadedDescShard("yastl", 0, "A library to provide a thread pool that can run scoped and …\nA structure providing access to a pool of worker threads …\nA scope represents a bunch of jobs that must be finished …\nProvide configuration parameters to the spawned threads …\nAdd a job to this scope.\nCreate a Scope which lasts forever.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAwaits all jobs submitted on this Scope to be completed.\nCreate an empty <code>ThreadConfig</code> which can be used to …\nCreate a new <code>Pool</code> that will execute it’s tasks on <code>n</code> …\nSet a common prefix for the worker thread names.\nAdd a job to this scope, which will also get access to …\nSpawn scoped jobs which guarantee to be finished before …\nSend a shutdown signal to every worker thread and wait for …\nSpawn an unscoped job onto this thread pool.\nSet that size of the stack of each spawned thread.\nCreate a new <code>Pool</code> that will execute it’s tasks on <code>n</code> …\nCreate a new subscope, bound to a lifetime smaller than …")
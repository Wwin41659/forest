searchState.loadedDescShard("fvm_ipld_hamt", 0, "HAMT crate for use as rust IPLD data structure\nKey type to be used to serialize as byte string instead of …\nCid not found in store error\nConfiguration options for a HAMT instance.\nDynamic error for when the error needs to be forwarded as …\nHAMT Error\nImplementation of the HAMT data structure for IPLD.\nLegacy amt V0\nCustom trait to avoid issues like …\nAlgorithm used as the hasher for the Hamt.\nHash bits does not support greater than 8 bit width\nIterator over HAMT Key/Value tuples.\nIterator over HAMT Key/Value tuples (hamt v0).\nMaximum depth error\nSha256 hashing algorithm used for hashing keys in the Hamt.\nThis should be treated as a fatal error, must have at …\nThe <code>bit_width</code> drives how wide and high the tree is going …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of key-value pairs in a bucket before it’…\nThe minimum depth at which the HAMT can store key-value …")